.MODEL SMALL
.STACK 100H
.DATA
n db ?
arr db n dup(?)
msg db "Enter size of array: $"
msg1 db 0AH,0DH,"Enter arrays elements: $"
msg2 db 0aH,0DH,"Average: $"
msg3 db 0AH,0DH,"Largest: $"
msg4 db 0AH,0DH,"Smallest: $"

total dw ?
average_ans db ?
large db ?
small db ?
.CODE
MAIN PROC
MOV AX,@DATA
MOV DS,AX

LEA DX,msg
MOV AH,09
INT 21H

MOV AH,1
INT 21H
SUB AL,30H
MOV N,AL

LEA DX,msg1
MOV AH,09
INT 21H

XOR CX,CX
MOV CL,N
MOV SI,0

INPUT:
MOV AH,1
INT 21H
SUB AL,30H
MOV ARR[SI],AL
INC SI
LOOP INPUT

CALL AVERAGE
CALL LARGEST
CALL SMALLEST
CALL OUTPUT
MAIN ENDP

AVERAGE PROC
XOR CX,CX
XOR AX,AX
MOV BX,BX
MOV CL,N
MOV SI,0
MOV BX,0

AVG:
ADD BL,ARR[SI]
INC SI
LOOP AVG

MOV TOTAL,BX
MOV AX,TOTAL
MOV BL,N
DIV N
MOV average_ans,AL
RET
AVERAGE ENDP

LARGEST PROC
XOR CX,CX
XOR AX,AX
MOV BX,BX
MOV CL,N
DEC CL

MOV SI,0
MOV BL,ARR[SI]
MOV LARGE,BL
MOV SI,1

COMPARE:
CMP BL,ARR[SI]
JL SWAP
JG SKIP
SWAP:
MOV BL,ARR[SI]
MOV LARGE,BL
SKIP:
INC SI
LOOP COMPARE
RET

LARGEST ENDP

SMALLEST PROC
XOR CX,CX
XOR AX,AX
MOV BX,BX
MOV CL,N
DEC CL

MOV SI,0
MOV BL,ARR[SI]
MOV SMALL,BL
MOV SI,1

COMPARE1:
CMP BL,ARR[SI]
JG SWAP1
JL SKIP1
SWAP1:
MOV BL,ARR[SI]
MOV SMALL,BL
SKIP1:
INC SI
LOOP COMPARE1
RET

SMALLEST ENDP

OUTPUT PROC
LEA DX,msg2
MOV AH,09
INT 21H

MOV DL,average_ans
ADD DL,30H
MOV AH,2
INT 21H

LEA DX,msg3
MOV AH,09
INT 21H

MOV DL,large
ADD DL,30H
MOV AH,2
INT 21H

LEA DX,msg4
MOV AH,09
INT 21H

MOV DL,small
ADD DL,30H
MOV AH,2
INT 21H
OUTPUT ENDP
END MAIN



; [SOURCE]: C:\emu8086\MySource\Final-3-Shamim(201902067).asm

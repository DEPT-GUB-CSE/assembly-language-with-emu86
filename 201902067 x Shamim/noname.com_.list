EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.com_ -- emu8086 assembler version: 4.08  
 
[ 12/8/2021  --  5:53:54 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       org 100h
[   2]        :                                       
[   3]    0100: EB 26                                 .data
[   4]        :                                       
[   5]    0102: 0A 0D 45 6E 74 65 72 20 56 61 6C 75   str db 10,13,"Enter Values: $"
                65 73 3A 20 24                      
[   6]    0113: 0D 0A 41 73 73 65 6E 64 69 6E 67 20   str1 db 0dh,0ah,"Assending Order: $"
                4F 72 64 65 72 3A 20 24             
[   7]    0127: 00                                    array db 10dup(0)
[   8]        :                                       
[   9]    0128:                                       .code
[  10]        :                                       
[  11]    0128: B4 09                                 mov ah,9
[  12]    012A: BA 02 01                              lea dx,str
[  13]    012D: CD 21                                 int 21h
[  14]        :                                       
[  15]    012F: B9 07 00                              mov cx,7
[  16]    0132: BB 27 01                              mov bx,offset array
[  17]    0135: B4 01                                 mov ah,1
[  18]        :                                       
[  19]    0137:                                       inputs:
[  20]    0137: CD 21                                 int 21h
[  21]    0139: 88 07                                 mov [bx],al
[  22]    013B: 43                                    inc bx
[  23]    013C: E2 F9                                 Loop inputs
[  24]        :                                       
[  25]    013E: B9 0A 00                              mov cx,10
[  26]    0141: 49                                    dec cx
[  27]        :                                       
[  28]    0142:                                       nextscan:
[  29]    0142: 8B D9                                 mov bx,cx
[  30]    0144: BE 00 00                              mov si,0
[  31]        :                                       
[  32]    0147:                                       nextcomp:
[  33]    0147: 8A 84 27 01                           mov al,array[si]
[  34]    014B: 8A 94 28 01                           mov dl,array[si+1]
[  35]    014F: 3A C2                                 cmp al,dl
[  36]        :                                       
[  37]    0151: 72 08                                 jc noswap
[  38]        :                                       
[  39]    0153: 88 94 27 01                           mov array[si],dl
[  40]    0157: 88 84 28 01                           mov array[si+1],al
[  41]        :                                       
[  42]    015B:                                       noswap:
[  43]    015B: 46                                    inc si
[  44]    015C: 4B                                    dec bx
[  45]    015D: 75 E8                                 jnz nextcomp
[  46]        :                                       
[  47]    015F: E2 E1                                 loop nextscan
[  48]        :                                       
[  49]    0161: B4 09                                 mov ah,9
[  50]    0163: BA 13 01                              lea dx,str1
[  51]    0166: CD 21                                 int 21h
[  52]        :                                       
[  53]    0168: B9 0A 00                              mov cx,10
[  54]    016B: BB 27 01                              mov bx,offset array
[  55]        :                                       
[  56]        :                                       ; this loop to display elements on the screen
[  57]    016E:                                       print:
[  58]    016E: B4 02                                 mov ah,2
[  59]    0170: 8A 17                                 mov dl,[bx]
[  60]    0172: CD 21                                 int 21h
[  61]    0174: 43                                    inc bx
[  62]    0175: E2 F7                                 loop print
[  63]        :                                       
[  64]    0177: C3                                    ret
[  65]        :                                       
 
===================================================================================================
 




===================================================================================================
